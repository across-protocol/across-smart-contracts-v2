/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ArbitrumAdapter, ArbitrumAdapterInterface } from "../ArbitrumAdapter";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ArbitrumL1InboxLike",
        name: "_l1ArbitrumInbox",
        type: "address",
      },
      {
        internalType: "contract ArbitrumL1ERC20GatewayLike",
        name: "_l1ERC20Gateway",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newHubPool",
        type: "address",
      },
    ],
    name: "HubPoolChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "newL2GasLimit",
        type: "uint32",
      },
    ],
    name: "L2GasLimitSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newL2GasPrice",
        type: "uint256",
      },
    ],
    name: "L2GasPriceSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newL2MaxSubmissionCost",
        type: "uint256",
      },
    ],
    name: "L2MaxSubmissionCostSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newL2RefundL2Address",
        type: "address",
      },
    ],
    name: "L2RefundL2AddressSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "MessageRelayed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "l1Token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "l2Token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "TokensRelayed",
    type: "event",
  },
  {
    inputs: [],
    name: "getL1CallValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "l1ERC20Gateway",
    outputs: [
      {
        internalType: "contract ArbitrumL1ERC20GatewayLike",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l1Inbox",
    outputs: [
      {
        internalType: "contract ArbitrumL1InboxLike",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l2GasLimit",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l2GasPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l2MaxSubmissionCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l2RefundL2Address",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "relayMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "l1Token",
        type: "address",
      },
      {
        internalType: "address",
        name: "l2Token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "relayTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x610140604052624c4b4060805267016345785d8a000060a0526402540be40060c05234801561002d57600080fd5b50604051610c11380380610c1183398101604081905261004c91610081565b6001600160a01b039182166101005216610120523360e0526100bb565b6001600160a01b038116811461007e57600080fd5b50565b6000806040838503121561009457600080fd5b825161009f81610069565b60208401519092506100b081610069565b809150509250929050565b60805160a05160c05160e0516101005161012051610abb6101566000396000818160d50152610392015260008181610143015261053e0152600081816101ab01526105940152600081816101770152818161028b0152818161035e01526105da015260008181610228015281816102b501526105720152600081816101df015281816102690152818161033701526105b80152610abb6000f3fe6080604052600436106100965760003560e01c80639ae3668511610069578063cf6e65b71161004e578063cf6e65b7146101cd578063e599477e14610216578063e6eb8ade1461024a57600080fd5b80639ae36685146101655780639c3ba2001461019957600080fd5b806308f1ed151461009b5780630e283a6a146100c357806352c8c75c1461011c5780638134f38514610131575b600080fd5b3480156100a757600080fd5b506100b061025d565b6040519081526020015b60405180910390f35b3480156100cf57600080fd5b506100f77f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100ba565b61012f61012a3660046106af565b6102de565b005b34801561013d57600080fd5b506100f77f000000000000000000000000000000000000000000000000000000000000000081565b34801561017157600080fd5b506100b07f000000000000000000000000000000000000000000000000000000000000000081565b3480156101a557600080fd5b506100f77f000000000000000000000000000000000000000000000000000000000000000081565b3480156101d957600080fd5b506102017f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020016100ba565b34801561022257600080fd5b506100b07f000000000000000000000000000000000000000000000000000000000000000081565b61012f6102583660046107c0565b610487565b60006102af63ffffffff7f0000000000000000000000000000000000000000000000000000000000000000167f0000000000000000000000000000000000000000000000000000000000000000610880565b6102d9907f00000000000000000000000000000000000000000000000000000000000000006108bd565b905090565b6040517fd2ce7d6500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff858116600483015282811660248301526044820184905263ffffffff7f00000000000000000000000000000000000000000000000000000000000000001660648301527f0000000000000000000000000000000000000000000000000000000000000000608483015260c060a4830152600060c48301527f0000000000000000000000000000000000000000000000000000000000000000169063d2ce7d659060e4016000604051808303816000875af11580156103db573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526104219190810190610905565b506040805173ffffffffffffffffffffffffffffffffffffffff868116825285811660208301528183018590528316606082015290517fd7e09655439c3932e55857df3220186e5a7f0980825f20691c2b35d941dee75b9181900360800190a150505050565b600061049161025d565b905080471015610501576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f496e73756666696369656e74204554482062616c616e63650000000000000000604482015260640160405180910390fd5b6040517f679b6ded00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063679b6ded9083906106049087906000907f0000000000000000000000000000000000000000000000000000000000000000907f00000000000000000000000000000000000000000000000000000000000000009081907f0000000000000000000000000000000000000000000000000000000000000000907f0000000000000000000000000000000000000000000000000000000000000000908d906004016109c6565b60206040518083038185885af1158015610622573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906106479190610a35565b507f9e6c52944e331ba6270e7fe4cea2a4086bae8f7a27e1cdba07f416806f5d0ac48383604051610679929190610a4e565b60405180910390a1505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146106aa57600080fd5b919050565b600080600080608085870312156106c557600080fd5b6106ce85610686565b93506106dc60208601610686565b9250604085013591506106f160608601610686565b905092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610772576107726106fc565b604052919050565b600067ffffffffffffffff821115610794576107946106fc565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600080604083850312156107d357600080fd5b6107dc83610686565b9150602083013567ffffffffffffffff8111156107f857600080fd5b8301601f8101851361080957600080fd5b803561081c6108178261077a565b61072b565b81815286602083850101111561083157600080fd5b816020840160208301376000602083830101528093505050509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156108b8576108b8610851565b500290565b600082198211156108d0576108d0610851565b500190565b60005b838110156108f05781810151838201526020016108d8565b838111156108ff576000848401525b50505050565b60006020828403121561091757600080fd5b815167ffffffffffffffff81111561092e57600080fd5b8201601f8101841361093f57600080fd5b805161094d6108178261077a565b81815285602083850101111561096257600080fd5b6109738260208301602086016108d5565b95945050505050565b600081518084526109948160208601602086016108d5565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600061010073ffffffffffffffffffffffffffffffffffffffff808c1684528a6020850152896040850152808916606085015280881660808501525063ffffffff861660a08401528460c08401528060e0840152610a268184018561097c565b9b9a5050505050505050505050565b600060208284031215610a4757600080fd5b5051919050565b73ffffffffffffffffffffffffffffffffffffffff83168152604060208201526000610a7d604083018461097c565b94935050505056fea2646970667358221220ad13d968df2a348c173b7de1ff2e269558eeba1b239309cc8439fc6b2925637064736f6c634300080b0033";

export class ArbitrumAdapter__factory extends ContractFactory {
  constructor(...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _l1ArbitrumInbox: string,
    _l1ERC20Gateway: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ArbitrumAdapter> {
    return super.deploy(_l1ArbitrumInbox, _l1ERC20Gateway, overrides || {}) as Promise<ArbitrumAdapter>;
  }
  getDeployTransaction(
    _l1ArbitrumInbox: string,
    _l1ERC20Gateway: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_l1ArbitrumInbox, _l1ERC20Gateway, overrides || {});
  }
  attach(address: string): ArbitrumAdapter {
    return super.attach(address) as ArbitrumAdapter;
  }
  connect(signer: Signer): ArbitrumAdapter__factory {
    return super.connect(signer) as ArbitrumAdapter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ArbitrumAdapterInterface {
    return new utils.Interface(_abi) as ArbitrumAdapterInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ArbitrumAdapter {
    return new Contract(address, _abi, signerOrProvider) as ArbitrumAdapter;
  }
}
