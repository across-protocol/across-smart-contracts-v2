/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PolygonAdapter, PolygonAdapterInterface } from "../PolygonAdapter";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IRootChainManager",
        name: "_rootChainManager",
        type: "address",
      },
      {
        internalType: "contract IFxStateSender",
        name: "_fxStateSender",
        type: "address",
      },
      {
        internalType: "contract WETH9",
        name: "_l1Weth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newHubPool",
        type: "address",
      },
    ],
    name: "HubPoolChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "MessageRelayed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "l1Token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "l2Token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "TokensRelayed",
    type: "event",
  },
  {
    inputs: [],
    name: "fxStateSender",
    outputs: [
      {
        internalType: "contract IFxStateSender",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l1Weth",
    outputs: [
      {
        internalType: "contract WETH9",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "relayMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "l1Token",
        type: "address",
      },
      {
        internalType: "address",
        name: "l2Token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "relayTokens",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "rootChainManager",
    outputs: [
      {
        internalType: "contract IRootChainManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60e060405234801561001057600080fd5b50604051610dc8380380610dc883398101604081905261002f91610064565b6001600160a01b0392831660805290821660a0521660c0526100b1565b6001600160a01b038116811461006157600080fd5b50565b60008060006060848603121561007957600080fd5b83516100848161004c565b60208501519093506100958161004c565b60408501519092506100a68161004c565b809150509250925092565b60805160a05160c051610cc06101086000396000818160710152818161014e01526101cf01526000818160e3015261047c0152600081816101170152818161028301528181610304015261032b0152610cc06000f3fe60806040526004361061005a5760003560e01c8063a996cabb11610043578063a996cabb146100d1578063bd07018d14610105578063e6eb8ade1461013957600080fd5b8063146bf4b11461005f57806352c8c75c146100bc575b600080fd5b34801561006b57600080fd5b506100937f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6100cf6100ca36600461099e565b61014c565b005b3480156100dd57600080fd5b506100937f000000000000000000000000000000000000000000000000000000000000000081565b34801561011157600080fd5b506100937f000000000000000000000000000000000000000000000000000000000000000081565b6100cf610147366004610a1a565b61043f565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156102e8576040517f2e1a7d4d000000000000000000000000000000000000000000000000000000008152600481018390527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690632e1a7d4d90602401600060405180830381600087803b15801561022857600080fd5b505af115801561023c573d6000803e3d6000fd5b50506040517f4faa8a2600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84811660048301527f0000000000000000000000000000000000000000000000000000000000000000169250634faa8a26915084906024016000604051808303818588803b1580156102ca57600080fd5b505af11580156102de573d6000803e3d6000fd5b50505050506103da565b61032973ffffffffffffffffffffffffffffffffffffffff85167f000000000000000000000000000000000000000000000000000000000000000084610522565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663e3dec8fb82868560405160200161037a91815260200190565b6040516020818303038152906040526040518463ffffffff1660e01b81526004016103a793929190610b70565b600060405180830381600087803b1580156103c157600080fd5b505af11580156103d5573d6000803e3d6000fd5b505050505b6040805173ffffffffffffffffffffffffffffffffffffffff868116825285811660208301528183018590528316606082015290517fd7e09655439c3932e55857df3220186e5a7f0980825f20691c2b35d941dee75b9181900360800190a150505050565b6040517fb472047700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063b4720477906104b39085908590600401610bb2565b600060405180830381600087803b1580156104cd57600080fd5b505af11580156104e1573d6000803e3d6000fd5b505050507f9e6c52944e331ba6270e7fe4cea2a4086bae8f7a27e1cdba07f416806f5d0ac48282604051610516929190610bb2565b60405180910390a15050565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8381166024830152600091839186169063dd62ed3e90604401602060405180830381865afa158015610599573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105bd9190610be1565b6105c79190610bfa565b6040805173ffffffffffffffffffffffffffffffffffffffff8616602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f095ea7b30000000000000000000000000000000000000000000000000000000017905290915061065790859061065d565b50505050565b60006106bf826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166107739092919063ffffffff16565b80519091501561076e57808060200190518101906106dd9190610c39565b61076e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b505050565b6060610782848460008561078c565b90505b9392505050565b60608247101561081e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610765565b73ffffffffffffffffffffffffffffffffffffffff85163b61089c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610765565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516108c59190610c5b565b60006040518083038185875af1925050503d8060008114610902576040519150601f19603f3d011682016040523d82523d6000602084013e610907565b606091505b5091509150610917828286610922565b979650505050505050565b60608315610931575081610785565b8251156109415782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107659190610c77565b803573ffffffffffffffffffffffffffffffffffffffff8116811461099957600080fd5b919050565b600080600080608085870312156109b457600080fd5b6109bd85610975565b93506109cb60208601610975565b9250604085013591506109e060608601610975565b905092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008060408385031215610a2d57600080fd5b610a3683610975565b9150602083013567ffffffffffffffff80821115610a5357600080fd5b818501915085601f830112610a6757600080fd5b813581811115610a7957610a796109eb565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715610abf57610abf6109eb565b81604052828152886020848701011115610ad857600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60005b83811015610b15578181015183820152602001610afd565b838111156106575750506000910152565b60008151808452610b3e816020860160208601610afa565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600073ffffffffffffffffffffffffffffffffffffffff808616835280851660208401525060606040830152610ba96060830184610b26565b95945050505050565b73ffffffffffffffffffffffffffffffffffffffff831681526040602082015260006107826040830184610b26565b600060208284031215610bf357600080fd5b5051919050565b60008219821115610c34577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500190565b600060208284031215610c4b57600080fd5b8151801515811461078557600080fd5b60008251610c6d818460208701610afa565b9190910192915050565b6020815260006107856020830184610b2656fea26469706673582212206ccb2c999629f5b7b03eb6b166577a70a94e54d5081728bea152d5947648f1ab64736f6c634300080b0033";

export class PolygonAdapter__factory extends ContractFactory {
  constructor(...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _rootChainManager: string,
    _fxStateSender: string,
    _l1Weth: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PolygonAdapter> {
    return super.deploy(_rootChainManager, _fxStateSender, _l1Weth, overrides || {}) as Promise<PolygonAdapter>;
  }
  getDeployTransaction(
    _rootChainManager: string,
    _fxStateSender: string,
    _l1Weth: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_rootChainManager, _fxStateSender, _l1Weth, overrides || {});
  }
  attach(address: string): PolygonAdapter {
    return super.attach(address) as PolygonAdapter;
  }
  connect(signer: Signer): PolygonAdapter__factory {
    return super.connect(signer) as PolygonAdapter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PolygonAdapterInterface {
    return new utils.Interface(_abi) as PolygonAdapterInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): PolygonAdapter {
    return new Contract(address, _abi, signerOrProvider) as PolygonAdapter;
  }
}
