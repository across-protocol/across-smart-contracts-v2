/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { SpokePoolInterface, SpokePoolInterfaceInterface } from "../SpokePoolInterface";

const _abi = [
  {
    inputs: [],
    name: "chainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "originToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "destinationChainId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "relayerFeePct",
        type: "uint64",
      },
      {
        internalType: "uint32",
        name: "quoteTimestamp",
        type: "uint32",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "rootBundleId",
        type: "uint32",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "amountToReturn",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "refundAmounts",
            type: "uint256[]",
          },
          {
            internalType: "uint32",
            name: "leafId",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "l2TokenAddress",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "refundAddresses",
            type: "address[]",
          },
        ],
        internalType: "struct SpokePoolInterface.RelayerRefundLeaf",
        name: "relayerRefundLeaf",
        type: "tuple",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "executeRelayerRefundRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "depositor",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "destinationToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "originChainId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "realizedLpFeePct",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "relayerFeePct",
        type: "uint64",
      },
      {
        internalType: "uint32",
        name: "depositId",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "rootBundleId",
        type: "uint32",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "executeSlowRelayRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "depositor",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "destinationToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxTokensToSend",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "repaymentChainId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "originChainId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "realizedLpFeePct",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "relayerFeePct",
        type: "uint64",
      },
      {
        internalType: "uint32",
        name: "depositId",
        type: "uint32",
      },
    ],
    name: "fillRelay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "depositor",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "destinationToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxTokensToSend",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "repaymentChainId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "originChainId",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "realizedLpFeePct",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "relayerFeePct",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "newRelayerFeePct",
        type: "uint64",
      },
      {
        internalType: "uint32",
        name: "depositId",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "depositorSignature",
        type: "bytes",
      },
    ],
    name: "fillRelayWithUpdatedFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "relayerRefundRoot",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "slowRelayRoot",
        type: "bytes32",
      },
    ],
    name: "relayRootBundle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newCrossDomainAdmin",
        type: "address",
      },
    ],
    name: "setCrossDomainAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "buffer",
        type: "uint32",
      },
    ],
    name: "setDepositQuoteTimeBuffer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "originToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "destinationChainId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "enable",
        type: "bool",
      },
    ],
    name: "setEnableRoute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newHubPool",
        type: "address",
      },
    ],
    name: "setHubPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "depositor",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "newRelayerFeePct",
        type: "uint64",
      },
      {
        internalType: "uint32",
        name: "depositId",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "depositorSignature",
        type: "bytes",
      },
    ],
    name: "speedUpDeposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class SpokePoolInterface__factory {
  static readonly abi = _abi;
  static createInterface(): SpokePoolInterfaceInterface {
    return new utils.Interface(_abi) as SpokePoolInterfaceInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): SpokePoolInterface {
    return new Contract(address, _abi, signerOrProvider) as SpokePoolInterface;
  }
}
