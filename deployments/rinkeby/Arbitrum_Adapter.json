{
  "address": "0xf116afc252687B487AceDcf3038790252D43fB83",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_hubPool",
          "type": "address"
        },
        {
          "internalType": "contract ArbitrumL1InboxLike",
          "name": "_l1ArbitrumInbox",
          "type": "address"
        },
        {
          "internalType": "contract ArbitrumL1ERC20GatewayLike",
          "name": "_l1ERC20Gateway",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newHubPool",
          "type": "address"
        }
      ],
      "name": "HubPoolChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "newL2GasLimit",
          "type": "uint32"
        }
      ],
      "name": "L2GasLimitSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newL2GasPrice",
          "type": "uint256"
        }
      ],
      "name": "L2GasPriceSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newL2MaxSubmissionCost",
          "type": "uint256"
        }
      ],
      "name": "L2MaxSubmissionCostSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newL2RefundL2Address",
          "type": "address"
        }
      ],
      "name": "L2RefundL2AddressSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "MessageRelayed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "l1Token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "l2Token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "TokensRelayed",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "getL1CallValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hubPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "l1ERC20Gateway",
      "outputs": [
        {
          "internalType": "contract ArbitrumL1ERC20GatewayLike",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "l1Inbox",
      "outputs": [
        {
          "internalType": "contract ArbitrumL1InboxLike",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "l2GasLimit",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "l2GasPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "l2MaxSubmissionCost",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "l2RefundL2Address",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "relayMessage",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "l1Token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "l2Token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "relayTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_hubPool",
          "type": "address"
        }
      ],
      "name": "setHubPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_l2GasLimit",
          "type": "uint32"
        }
      ],
      "name": "setL2GasLimit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_l2GasPrice",
          "type": "uint256"
        }
      ],
      "name": "setL2GasPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_l2MaxSubmissionCost",
          "type": "uint256"
        }
      ],
      "name": "setL2MaxSubmissionCost",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_l2RefundL2Address",
          "type": "address"
        }
      ],
      "name": "setL2RefundL2Address",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x07ffdd06e6b55db041e0d1be3aa25e138ac366fe6072b38cc574ee45cd4fed30",
  "receipt": {
    "to": null,
    "from": "0x9A8f92a830A5cB89a3816e3D267CB7791c16b04D",
    "contractAddress": "0xf116afc252687B487AceDcf3038790252D43fB83",
    "transactionIndex": 11,
    "gasUsed": "1353527",
    "logsBloom": "0x
    "blockHash": "0xdf91a8dd7c7d79daafd4607be1123171ed6a8e1d621f4aa56679436bd24ea0b9",
    "transactionHash": "0x07ffdd06e6b55db041e0d1be3aa25e138ac366fe6072b38cc574ee45cd4fed30",
    "logs": [
      {
        "transactionIndex": 11,
        "blockNumber": 10226933,
        "transactionHash": "0x07ffdd06e6b55db041e0d1be3aa25e138ac366fe6072b38cc574ee45cd4fed30",
        "address": "0xf116afc252687B487AceDcf3038790252D43fB83",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000009a8f92a830a5cb89a3816e3d267cb7791c16b04d"
        ],
        "data": "0x",
        "logIndex": 23,
        "blockHash": "0xdf91a8dd7c7d79daafd4607be1123171ed6a8e1d621f4aa56679436bd24ea0b9"
      }
    ],
    "blockNumber": 10226933,
    "cumulativeGasUsed": "2951798",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xFA6326FdF1f149B63d116576fCfbc7e15cc0355A",
    "0x578BAde599406A8fE3d24Fd7f7211c0911F5B29e",
    "0x91169Dbb45e6804743F94609De50D511C437572E"
  ],
  "numDeployments": 1,
  "solcInputHash": "cee77d8f3a5225b985a9cf3439956316",
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_hubPool\",\"type\":\"address\"},{\"internalType\":\"contract ArbitrumL1InboxLike\",\"name\":\"_l1ArbitrumInbox\",\"type\":\"address\"},{\"internalType\":\"contract ArbitrumL1ERC20GatewayLike\",\"name\":\"_l1ERC20Gateway\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newHubPool\",\"type\":\"address\"}],\"name\":\"HubPoolChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"newL2GasLimit\",\"type\":\"uint32\"}],\"name\":\"L2GasLimitSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newL2GasPrice\",\"type\":\"uint256\"}],\"name\":\"L2GasPriceSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newL2MaxSubmissionCost\",\"type\":\"uint256\"}],\"name\":\"L2MaxSubmissionCostSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newL2RefundL2Address\",\"type\":\"address\"}],\"name\":\"L2RefundL2AddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"MessageRelayed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"l2Token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"TokensRelayed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getL1CallValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hubPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l1ERC20Gateway\",\"outputs\":[{\"internalType\":\"contract ArbitrumL1ERC20GatewayLike\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l1Inbox\",\"outputs\":[{\"internalType\":\"contract ArbitrumL1InboxLike\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l2GasLimit\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l2GasPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l2MaxSubmissionCost\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l2RefundL2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"relayMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"l2Token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"relayTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_hubPool\",\"type\":\"address\"}],\"name\":\"setHubPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_l2GasLimit\",\"type\":\"uint32\"}],\"name\":\"setL2GasLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_l2GasPrice\",\"type\":\"uint256\"}],\"name\":\"setL2GasPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_l2MaxSubmissionCost\",\"type\":\"uint256\"}],\"name\":\"setL2MaxSubmissionCost\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_l2RefundL2Address\",\"type\":\"address\"}],\"name\":\"setL2RefundL2Address\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/chain-adapters/Arbitrum_Adapter.sol\":\"Arbitrum_Adapter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@uma/core/contracts/common/implementation/Lockable.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title A contract that provides modifiers to prevent reentrancy to state-changing and view-only methods. This contract\\n * is inspired by https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/ReentrancyGuard.sol\\n * and https://github.com/balancer-labs/balancer-core/blob/master/contracts/BPool.sol.\\n */\\ncontract Lockable {\\n    bool private _notEntered;\\n\\n    constructor() {\\n        // Storing an initial non-zero value makes deployment a bit more expensive, but in exchange the refund on every\\n        // call to nonReentrant will be lower in amount. Since refunds are capped to a percentage of the total\\n        // transaction's gas, it is best to keep them low in cases like this one, to increase the likelihood of the full\\n        // refund coming into effect.\\n        _notEntered = true;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant` function is not supported. It is possible to\\n     * prevent this from happening by making the `nonReentrant` function external, and making it call a `private`\\n     * function that does the actual state modification.\\n     */\\n    modifier nonReentrant() {\\n        _preEntranceCheck();\\n        _preEntranceSet();\\n        _;\\n        _postEntranceReset();\\n    }\\n\\n    /**\\n     * @dev Designed to prevent a view-only method from being re-entered during a call to a `nonReentrant()` state-changing method.\\n     */\\n    modifier nonReentrantView() {\\n        _preEntranceCheck();\\n        _;\\n    }\\n\\n    // Internal methods are used to avoid copying the require statement's bytecode to every `nonReentrant()` method.\\n    // On entry into a function, `_preEntranceCheck()` should always be called to check if the function is being\\n    // re-entered. Then, if the function modifies state, it should call `_postEntranceSet()`, perform its logic, and\\n    // then call `_postEntranceReset()`.\\n    // View-only methods can simply call `_preEntranceCheck()` to make sure that it is not being re-entered.\\n    function _preEntranceCheck() internal view {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_notEntered, \\\"ReentrancyGuard: reentrant call\\\");\\n    }\\n\\n    function _preEntranceSet() internal {\\n        // Any calls to nonReentrant after this point will fail\\n        _notEntered = false;\\n    }\\n\\n    function _postEntranceReset() internal {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _notEntered = true;\\n    }\\n}\\n\",\"keccak256\":\"0xcd34b3f83b61a096b53020749f327096d5cacd89c2393d947595afb934496ad4\",\"license\":\"AGPL-3.0-only\"},\"contracts/chain-adapters/Arbitrum_Adapter.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./Base_Adapter.sol\\\";\\r\\nimport \\\"../interfaces/AdapterInterface.sol\\\";\\r\\nimport \\\"../interfaces/WETH9.sol\\\";\\r\\n\\r\\nimport \\\"@uma/core/contracts/common/implementation/Lockable.sol\\\";\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\n\\r\\ninterface ArbitrumL1InboxLike {\\r\\n    function createRetryableTicket(\\r\\n        address destAddr,\\r\\n        uint256 arbTxCallValue,\\r\\n        uint256 maxSubmissionCost,\\r\\n        address submissionRefundAddress,\\r\\n        address valueRefundAddress,\\r\\n        uint256 maxGas,\\r\\n        uint256 gasPriceBid,\\r\\n        bytes calldata data\\r\\n    ) external payable returns (uint256);\\r\\n}\\r\\n\\r\\ninterface ArbitrumL1ERC20GatewayLike {\\r\\n    function outboundTransfer(\\r\\n        address _token,\\r\\n        address _to,\\r\\n        uint256 _amount,\\r\\n        uint256 _maxGas,\\r\\n        uint256 _gasPriceBid,\\r\\n        bytes calldata _data\\r\\n    ) external payable returns (bytes memory);\\r\\n}\\r\\n\\r\\ncontract Arbitrum_Adapter is Base_Adapter, Lockable {\\r\\n    // Gas limit for immediate L2 execution attempt (can be estimated via NodeInterface.estimateRetryableTicket).\\r\\n    // NodeInterface precompile interface exists at L2 address 0x00000000000000000000000000000000000000C8\\r\\n    uint32 public l2GasLimit = 5_000_000;\\r\\n\\r\\n    // Amount of ETH allocated to pay for the base submission fee. The base submission fee is a parameter unique to\\r\\n    // retryable transactions; the user is charged the base submission fee to cover the storage costs of keeping their\\r\\n    // ticket\\u2019s calldata in the retry buffer. (current base submission fee is queryable via\\r\\n    // ArbRetryableTx.getSubmissionPrice). ArbRetryableTicket precompile interface exists at L2 address\\r\\n    // 0x000000000000000000000000000000000000006E.\\r\\n    uint256 public l2MaxSubmissionCost = 0.1e18;\\r\\n\\r\\n    // L2 Gas price bid for immediate L2 execution attempt (queryable via standard eth*gasPrice RPC)\\r\\n    uint256 public l2GasPrice = 10e9; // 10 gWei\\r\\n\\r\\n    // This address on L2 receives extra ETH that is left over after relaying a message via the inbox.\\r\\n    address public l2RefundL2Address;\\r\\n\\r\\n    ArbitrumL1InboxLike public l1Inbox;\\r\\n\\r\\n    ArbitrumL1ERC20GatewayLike public l1ERC20Gateway;\\r\\n\\r\\n    event L2GasLimitSet(uint32 newL2GasLimit);\\r\\n\\r\\n    event L2MaxSubmissionCostSet(uint256 newL2MaxSubmissionCost);\\r\\n\\r\\n    event L2GasPriceSet(uint256 newL2GasPrice);\\r\\n\\r\\n    event L2RefundL2AddressSet(address newL2RefundL2Address);\\r\\n\\r\\n    constructor(\\r\\n        address _hubPool,\\r\\n        ArbitrumL1InboxLike _l1ArbitrumInbox,\\r\\n        ArbitrumL1ERC20GatewayLike _l1ERC20Gateway\\r\\n    ) Base_Adapter(_hubPool) {\\r\\n        l1Inbox = _l1ArbitrumInbox;\\r\\n        l1ERC20Gateway = _l1ERC20Gateway;\\r\\n\\r\\n        l2RefundL2Address = owner();\\r\\n    }\\r\\n\\r\\n    function setL2GasLimit(uint32 _l2GasLimit) public onlyOwner {\\r\\n        l2GasLimit = _l2GasLimit;\\r\\n        emit L2GasLimitSet(l2GasLimit);\\r\\n    }\\r\\n\\r\\n    function setL2MaxSubmissionCost(uint256 _l2MaxSubmissionCost) public onlyOwner {\\r\\n        l2MaxSubmissionCost = _l2MaxSubmissionCost;\\r\\n        emit L2MaxSubmissionCostSet(l2MaxSubmissionCost);\\r\\n    }\\r\\n\\r\\n    function setL2GasPrice(uint256 _l2GasPrice) public onlyOwner {\\r\\n        l2GasPrice = _l2GasPrice;\\r\\n        emit L2GasPriceSet(l2GasPrice);\\r\\n    }\\r\\n\\r\\n    function setL2RefundL2Address(address _l2RefundL2Address) public onlyOwner {\\r\\n        l2RefundL2Address = _l2RefundL2Address;\\r\\n        emit L2RefundL2AddressSet(l2RefundL2Address);\\r\\n    }\\r\\n\\r\\n    function relayMessage(address target, bytes memory message) external payable override nonReentrant onlyHubPool {\\r\\n        uint256 requiredL1CallValue = getL1CallValue();\\r\\n        require(address(this).balance >= requiredL1CallValue, \\\"Insufficient ETH balance\\\");\\r\\n\\r\\n        l1Inbox.createRetryableTicket{ value: requiredL1CallValue }(\\r\\n            target, // destAddr destination L2 contract address\\r\\n            0, // l2CallValue call value for retryable L2 message\\r\\n            l2MaxSubmissionCost, // maxSubmissionCost Max gas deducted from user's L2 balance to cover base submission fee\\r\\n            l2RefundL2Address, // excessFeeRefundAddress maxgas x gasprice - execution cost gets credited here on L2 balance\\r\\n            l2RefundL2Address, // callValueRefundAddress l2Callvalue gets credited here on L2 if retryable txn times out or gets cancelled\\r\\n            l2GasLimit, // maxGas Max gas deducted from user's L2 balance to cover L2 execution\\r\\n            l2GasPrice, // gasPriceBid price bid for L2 execution\\r\\n            message // data ABI encoded data of L2 message\\r\\n        );\\r\\n\\r\\n        emit MessageRelayed(target, message);\\r\\n    }\\r\\n\\r\\n    function relayTokens(\\r\\n        address l1Token,\\r\\n        address l2Token, // l2Token is unused for Arbitrum.\\r\\n        uint256 amount,\\r\\n        address to\\r\\n    ) external payable override nonReentrant onlyHubPool {\\r\\n        l1ERC20Gateway.outboundTransfer(l1Token, to, amount, l2GasLimit, l2GasPrice, \\\"\\\");\\r\\n        emit TokensRelayed(l1Token, l2Token, amount, to);\\r\\n    }\\r\\n\\r\\n    function getL1CallValue() public view returns (uint256) {\\r\\n        return l2MaxSubmissionCost + l2GasPrice * l2GasLimit;\\r\\n    }\\r\\n\\r\\n    receive() external payable {}\\r\\n}\\r\\n\",\"keccak256\":\"0x4d830e78208ff7bcdbb2038747a9352d7788461a0d9a83dfe0c32300e8f78569\",\"license\":\"AGPL-3.0-only\"},\"contracts/chain-adapters/Base_Adapter.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity ^0.8.0;\\nimport \\\"../interfaces/AdapterInterface.sol\\\";\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\nabstract contract Base_Adapter is Ownable, AdapterInterface {\\n    address public hubPool;\\n\\n    modifier onlyHubPool() {\\n        require(msg.sender == hubPool, \\\"Can only be called by hubPool\\\");\\n        _;\\n    }\\n\\n    constructor(address _hubPool) {\\n        hubPool = _hubPool;\\n    }\\n\\n    function setHubPool(address _hubPool) public onlyOwner {\\n        hubPool = _hubPool;\\n        emit HubPoolChanged(_hubPool);\\n    }\\n}\\n\",\"keccak256\":\"0xfe795ada9a48a1dbbfe7d8e002ba8b78bae9f839206d37a471449a99895ce7ae\",\"license\":\"AGPL-3.0-only\"},\"contracts/interfaces/AdapterInterface.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity ^0.8.0;\\n\\n/**\\n * @notice Sends cross chain messages and tokens to contracts on a specific L2 network.\\n */\\n\\ninterface AdapterInterface {\\n    event HubPoolChanged(address newHubPool);\\n\\n    event MessageRelayed(address target, bytes message);\\n\\n    event TokensRelayed(address l1Token, address l2Token, uint256 amount, address to);\\n\\n    function relayMessage(address target, bytes memory message) external payable;\\n\\n    function relayTokens(\\n        address l1Token,\\n        address l2Token,\\n        uint256 amount,\\n        address to\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x60e1ed2205f90655fe4152a90709be15bc9550fb3faeaf9835fee22c095bab11\",\"license\":\"AGPL-3.0-only\"},\"contracts/interfaces/WETH9.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface WETH9 {\\r\\n    function withdraw(uint256 wad) external;\\r\\n\\r\\n    function deposit() external payable;\\r\\n\\r\\n    function balanceOf(address guy) external view returns (uint256 wad);\\r\\n\\r\\n    function transfer(address guy, uint256 wad) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x08755a7e4fc4ed75895c9b803f19552c4f0a455947dca04d86db4355114253b3\",\"license\":\"GPL-3.0-only\"}},\"version\":1}",
  "bytecode": "0x60806040526001805463ffffffff60a81b19166201312d60ae1b17905567016345785d8a00006002556402540be4006003553480156200003e57600080fd5b506040516200165038038062001650833981016040819052620000619162000139565b826200006d33620000d0565b600180546001600160a81b0319166001600160a01b0392831617600160a01b179055600580549382166001600160a01b0319948516179055600680549282169284169290921790915560005460048054919092169216919091179055506200018d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146200013657600080fd5b50565b6000806000606084860312156200014f57600080fd5b83516200015c8162000120565b60208501519093506200016f8162000120565b6040850151909250620001828162000120565b809150509250925092565b6114b3806200019d6000396000f3fe60806040526004361061012d5760003560e01c8063b9d37d42116100a5578063da0323ce11610074578063e599477e11610059578063e599477e14610390578063e6eb8ade146103a6578063f2fde38b146103b957600080fd5b8063da0323ce14610343578063e19044021461036357600080fd5b8063b9d37d4214610298578063cc69534c146102b8578063cf6e65b7146102d8578063d921878d1461032357600080fd5b8063715018a6116100fc5780638da5cb5b116100e15780638da5cb5b1461022a5780639ae36685146102555780639c3ba2001461026b57600080fd5b8063715018a6146101e85780638134f385146101fd57600080fd5b806308f1ed15146101395780630e283a6a146101615780631dfb2d02146101b357806352c8c75c146101d557600080fd5b3661013457005b600080fd5b34801561014557600080fd5b5061014e6103d9565b6040519081526020015b60405180910390f35b34801561016d57600080fd5b5060065461018e9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610158565b3480156101bf57600080fd5b506101d36101ce36600461104a565b61041e565b005b6101d36101e336600461106c565b61051e565b3480156101f457600080fd5b506101d3610785565b34801561020957600080fd5b5060055461018e9073ffffffffffffffffffffffffffffffffffffffff1681565b34801561023657600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff1661018e565b34801561026157600080fd5b5061014e60035481565b34801561027757600080fd5b5060045461018e9073ffffffffffffffffffffffffffffffffffffffff1681565b3480156102a457600080fd5b506101d36102b33660046110b9565b610812565b3480156102c457600080fd5b506101d36102d33660046110b9565b6108c8565b3480156102e457600080fd5b5060015461030e907501000000000000000000000000000000000000000000900463ffffffff1681565b60405163ffffffff9091168152602001610158565b34801561032f57600080fd5b506101d361033e3660046110d2565b61097e565b34801561034f57600080fd5b506101d361035e36600461104a565b610a80565b34801561036f57600080fd5b5060015461018e9073ffffffffffffffffffffffffffffffffffffffff1681565b34801561039c57600080fd5b5061014e60025481565b6101d36103b43660046111bc565b610b74565b3480156103c557600080fd5b506101d36103d436600461104a565b610df8565b60015460035460009161040c91750100000000000000000000000000000000000000000090910463ffffffff169061127c565b60025461041991906112b9565b905090565b60005473ffffffffffffffffffffffffffffffffffffffff1633146104a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527fb5f5d393a77ca9332951514b7bbfed2186d8fecdfafa02a2a676b05e67716963906020015b60405180910390a150565b610526610f28565b610553600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff169055565b60015473ffffffffffffffffffffffffffffffffffffffff1633146105d4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f43616e206f6e6c792062652063616c6c656420627920687562506f6f6c000000604482015260640161049b565b6006546001546003546040517fd2ce7d6500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8881166004830152858116602483015260448201879052750100000000000000000000000000000000000000000090930463ffffffff166064820152608481019190915260c060a4820152600060c482015291169063d2ce7d659060e4016000604051808303816000875af1158015610695573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526106db91908101906112fd565b506040805173ffffffffffffffffffffffffffffffffffffffff868116825285811660208301528183018590528316606082015290517fd7e09655439c3932e55857df3220186e5a7f0980825f20691c2b35d941dee75b9181900360800190a161077f600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000179055565b50505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610806576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161049b565b6108106000610fac565b565b60005473ffffffffffffffffffffffffffffffffffffffff163314610893576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161049b565b60038190556040518181527f11b37f476a8e54576728852320de360efcd9aa85196d533f0bcee62199c1c7a890602001610513565b60005473ffffffffffffffffffffffffffffffffffffffff163314610949576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161049b565b60028190556040518181527f0f2c592d7af44ef2fd6f17f67ea8bcecbc73b6d26745fd69234149c377ee4fb690602001610513565b60005473ffffffffffffffffffffffffffffffffffffffff1633146109ff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161049b565b600180547fffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffffff16750100000000000000000000000000000000000000000063ffffffff8481168202929092179283905560405192041681527f69f42c68da3e328d797524adf92a3bbe202f1ee08416cfed0823b7c70dfcdc1890602001610513565b60005473ffffffffffffffffffffffffffffffffffffffff163314610b01576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161049b565b600480547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527ffa92d17b08fbc5336e463f747e5efb7ab824785604b92201e7f06e998726bec990602001610513565b610b7c610f28565b610ba9600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff169055565b60015473ffffffffffffffffffffffffffffffffffffffff163314610c2a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f43616e206f6e6c792062652063616c6c656420627920687562506f6f6c000000604482015260640161049b565b6000610c346103d9565b905080471015610ca0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f496e73756666696369656e74204554482062616c616e63650000000000000000604482015260640161049b565b600554600254600480546001546003546040517f679b6ded00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9687169663679b6ded968996610d32968d96600096939594909116938493750100000000000000000000000000000000000000000090920463ffffffff16928e91016113be565b60206040518083038185885af1158015610d50573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610d75919061142d565b507f9e6c52944e331ba6270e7fe4cea2a4086bae8f7a27e1cdba07f416806f5d0ac48383604051610da7929190611446565b60405180910390a150610df4600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000179055565b5050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610e79576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161049b565b73ffffffffffffffffffffffffffffffffffffffff8116610f1c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161049b565b610f2581610fac565b50565b60015474010000000000000000000000000000000000000000900460ff16610810576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161049b565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461104557600080fd5b919050565b60006020828403121561105c57600080fd5b61106582611021565b9392505050565b6000806000806080858703121561108257600080fd5b61108b85611021565b935061109960208601611021565b9250604085013591506110ae60608601611021565b905092959194509250565b6000602082840312156110cb57600080fd5b5035919050565b6000602082840312156110e457600080fd5b813563ffffffff8116811461106557600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561116e5761116e6110f8565b604052919050565b600067ffffffffffffffff821115611190576111906110f8565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600080604083850312156111cf57600080fd5b6111d883611021565b9150602083013567ffffffffffffffff8111156111f457600080fd5b8301601f8101851361120557600080fd5b803561121861121382611176565b611127565b81815286602083850101111561122d57600080fd5b816020840160208301376000602083830101528093505050509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156112b4576112b461124d565b500290565b600082198211156112cc576112cc61124d565b500190565b60005b838110156112ec5781810151838201526020016112d4565b8381111561077f5750506000910152565b60006020828403121561130f57600080fd5b815167ffffffffffffffff81111561132657600080fd5b8201601f8101841361133757600080fd5b805161134561121382611176565b81815285602083850101111561135a57600080fd5b61136b8260208301602086016112d1565b95945050505050565b6000815180845261138c8160208601602086016112d1565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600061010073ffffffffffffffffffffffffffffffffffffffff808c1684528a6020850152896040850152808916606085015280881660808501525063ffffffff861660a08401528460c08401528060e084015261141e81840185611374565b9b9a5050505050505050505050565b60006020828403121561143f57600080fd5b5051919050565b73ffffffffffffffffffffffffffffffffffffffff831681526040602082015260006114756040830184611374565b94935050505056fea264697066735822122081fe1198bec4c1ed2aacca4db1891a3306f3e229551542605f21c5d71820808e64736f6c634300080b0033",
  "deployedBytecode": "0x60806040526004361061012d5760003560e01c8063b9d37d42116100a5578063da0323ce11610074578063e599477e11610059578063e599477e14610390578063e6eb8ade146103a6578063f2fde38b146103b957600080fd5b8063da0323ce14610343578063e19044021461036357600080fd5b8063b9d37d4214610298578063cc69534c146102b8578063cf6e65b7146102d8578063d921878d1461032357600080fd5b8063715018a6116100fc5780638da5cb5b116100e15780638da5cb5b1461022a5780639ae36685146102555780639c3ba2001461026b57600080fd5b8063715018a6146101e85780638134f385146101fd57600080fd5b806308f1ed15146101395780630e283a6a146101615780631dfb2d02146101b357806352c8c75c146101d557600080fd5b3661013457005b600080fd5b34801561014557600080fd5b5061014e6103d9565b6040519081526020015b60405180910390f35b34801561016d57600080fd5b5060065461018e9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610158565b3480156101bf57600080fd5b506101d36101ce36600461104a565b61041e565b005b6101d36101e336600461106c565b61051e565b3480156101f457600080fd5b506101d3610785565b34801561020957600080fd5b5060055461018e9073ffffffffffffffffffffffffffffffffffffffff1681565b34801561023657600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff1661018e565b34801561026157600080fd5b5061014e60035481565b34801561027757600080fd5b5060045461018e9073ffffffffffffffffffffffffffffffffffffffff1681565b3480156102a457600080fd5b506101d36102b33660046110b9565b610812565b3480156102c457600080fd5b506101d36102d33660046110b9565b6108c8565b3480156102e457600080fd5b5060015461030e907501000000000000000000000000000000000000000000900463ffffffff1681565b60405163ffffffff9091168152602001610158565b34801561032f57600080fd5b506101d361033e3660046110d2565b61097e565b34801561034f57600080fd5b506101d361035e36600461104a565b610a80565b34801561036f57600080fd5b5060015461018e9073ffffffffffffffffffffffffffffffffffffffff1681565b34801561039c57600080fd5b5061014e60025481565b6101d36103b43660046111bc565b610b74565b3480156103c557600080fd5b506101d36103d436600461104a565b610df8565b60015460035460009161040c91750100000000000000000000000000000000000000000090910463ffffffff169061127c565b60025461041991906112b9565b905090565b60005473ffffffffffffffffffffffffffffffffffffffff1633146104a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527fb5f5d393a77ca9332951514b7bbfed2186d8fecdfafa02a2a676b05e67716963906020015b60405180910390a150565b610526610f28565b610553600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff169055565b60015473ffffffffffffffffffffffffffffffffffffffff1633146105d4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f43616e206f6e6c792062652063616c6c656420627920687562506f6f6c000000604482015260640161049b565b6006546001546003546040517fd2ce7d6500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8881166004830152858116602483015260448201879052750100000000000000000000000000000000000000000090930463ffffffff166064820152608481019190915260c060a4820152600060c482015291169063d2ce7d659060e4016000604051808303816000875af1158015610695573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526106db91908101906112fd565b506040805173ffffffffffffffffffffffffffffffffffffffff868116825285811660208301528183018590528316606082015290517fd7e09655439c3932e55857df3220186e5a7f0980825f20691c2b35d941dee75b9181900360800190a161077f600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000179055565b50505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610806576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161049b565b6108106000610fac565b565b60005473ffffffffffffffffffffffffffffffffffffffff163314610893576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161049b565b60038190556040518181527f11b37f476a8e54576728852320de360efcd9aa85196d533f0bcee62199c1c7a890602001610513565b60005473ffffffffffffffffffffffffffffffffffffffff163314610949576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161049b565b60028190556040518181527f0f2c592d7af44ef2fd6f17f67ea8bcecbc73b6d26745fd69234149c377ee4fb690602001610513565b60005473ffffffffffffffffffffffffffffffffffffffff1633146109ff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161049b565b600180547fffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffffff16750100000000000000000000000000000000000000000063ffffffff8481168202929092179283905560405192041681527f69f42c68da3e328d797524adf92a3bbe202f1ee08416cfed0823b7c70dfcdc1890602001610513565b60005473ffffffffffffffffffffffffffffffffffffffff163314610b01576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161049b565b600480547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527ffa92d17b08fbc5336e463f747e5efb7ab824785604b92201e7f06e998726bec990602001610513565b610b7c610f28565b610ba9600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff169055565b60015473ffffffffffffffffffffffffffffffffffffffff163314610c2a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f43616e206f6e6c792062652063616c6c656420627920687562506f6f6c000000604482015260640161049b565b6000610c346103d9565b905080471015610ca0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f496e73756666696369656e74204554482062616c616e63650000000000000000604482015260640161049b565b600554600254600480546001546003546040517f679b6ded00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9687169663679b6ded968996610d32968d96600096939594909116938493750100000000000000000000000000000000000000000090920463ffffffff16928e91016113be565b60206040518083038185885af1158015610d50573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610d75919061142d565b507f9e6c52944e331ba6270e7fe4cea2a4086bae8f7a27e1cdba07f416806f5d0ac48383604051610da7929190611446565b60405180910390a150610df4600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674010000000000000000000000000000000000000000179055565b5050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610e79576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161049b565b73ffffffffffffffffffffffffffffffffffffffff8116610f1c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161049b565b610f2581610fac565b50565b60015474010000000000000000000000000000000000000000900460ff16610810576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161049b565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461104557600080fd5b919050565b60006020828403121561105c57600080fd5b61106582611021565b9392505050565b6000806000806080858703121561108257600080fd5b61108b85611021565b935061109960208601611021565b9250604085013591506110ae60608601611021565b905092959194509250565b6000602082840312156110cb57600080fd5b5035919050565b6000602082840312156110e457600080fd5b813563ffffffff8116811461106557600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561116e5761116e6110f8565b604052919050565b600067ffffffffffffffff821115611190576111906110f8565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600080604083850312156111cf57600080fd5b6111d883611021565b9150602083013567ffffffffffffffff8111156111f457600080fd5b8301601f8101851361120557600080fd5b803561121861121382611176565b611127565b81815286602083850101111561122d57600080fd5b816020840160208301376000602083830101528093505050509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156112b4576112b461124d565b500290565b600082198211156112cc576112cc61124d565b500190565b60005b838110156112ec5781810151838201526020016112d4565b8381111561077f5750506000910152565b60006020828403121561130f57600080fd5b815167ffffffffffffffff81111561132657600080fd5b8201601f8101841361133757600080fd5b805161134561121382611176565b81815285602083850101111561135a57600080fd5b61136b8260208301602086016112d1565b95945050505050565b6000815180845261138c8160208601602086016112d1565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600061010073ffffffffffffffffffffffffffffffffffffffff808c1684528a6020850152896040850152808916606085015280881660808501525063ffffffff861660a08401528460c08401528060e084015261141e81840185611374565b9b9a5050505050505050505050565b60006020828403121561143f57600080fd5b5051919050565b73ffffffffffffffffffffffffffffffffffffffff831681526040602082015260006114756040830184611374565b94935050505056fea264697066735822122081fe1198bec4c1ed2aacca4db1891a3306f3e229551542605f21c5d71820808e64736f6c634300080b0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 400,
        "contract": "contracts/chain-adapters/Arbitrum_Adapter.sol:Arbitrum_Adapter",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 9447,
        "contract": "contracts/chain-adapters/Arbitrum_Adapter.sol:Arbitrum_Adapter",
        "label": "hubPool",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 5108,
        "contract": "contracts/chain-adapters/Arbitrum_Adapter.sol:Arbitrum_Adapter",
        "label": "_notEntered",
        "offset": 20,
        "slot": "1",
        "type": "t_bool"
      },
      {
        "astId": 9214,
        "contract": "contracts/chain-adapters/Arbitrum_Adapter.sol:Arbitrum_Adapter",
        "label": "l2GasLimit",
        "offset": 21,
        "slot": "1",
        "type": "t_uint32"
      },
      {
        "astId": 9217,
        "contract": "contracts/chain-adapters/Arbitrum_Adapter.sol:Arbitrum_Adapter",
        "label": "l2MaxSubmissionCost",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 9220,
        "contract": "contracts/chain-adapters/Arbitrum_Adapter.sol:Arbitrum_Adapter",
        "label": "l2GasPrice",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 9222,
        "contract": "contracts/chain-adapters/Arbitrum_Adapter.sol:Arbitrum_Adapter",
        "label": "l2RefundL2Address",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 9225,
        "contract": "contracts/chain-adapters/Arbitrum_Adapter.sol:Arbitrum_Adapter",
        "label": "l1Inbox",
        "offset": 0,
        "slot": "5",
        "type": "t_contract(ArbitrumL1InboxLike)9189"
      },
      {
        "astId": 9228,
        "contract": "contracts/chain-adapters/Arbitrum_Adapter.sol:Arbitrum_Adapter",
        "label": "l1ERC20Gateway",
        "offset": 0,
        "slot": "6",
        "type": "t_contract(ArbitrumL1ERC20GatewayLike)9207"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(ArbitrumL1ERC20GatewayLike)9207": {
        "encoding": "inplace",
        "label": "contract ArbitrumL1ERC20GatewayLike",
        "numberOfBytes": "20"
      },
      "t_contract(ArbitrumL1InboxLike)9189": {
        "encoding": "inplace",
        "label": "contract ArbitrumL1InboxLike",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      }
    }
  }
}
