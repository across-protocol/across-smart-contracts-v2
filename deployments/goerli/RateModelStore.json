{
  "address": "0x9C043C139486891D7a67e76E4c31Ac56bBfAF885",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "l1Token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "rateModel",
          "type": "string"
        }
      ],
      "name": "UpdatedRateModel",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "l1TokenRateModels",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "l1Token",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "rateModel",
          "type": "string"
        }
      ],
      "name": "updateRateModel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xf99457624e7eb748f4592d91b0bbdb14d61b0fcda2f17cc62841c342f8f421d3",
  "receipt": {
    "to": null,
    "from": "0x9A8f92a830A5cB89a3816e3D267CB7791c16b04D",
    "contractAddress": "0x9C043C139486891D7a67e76E4c31Ac56bBfAF885",
    "transactionIndex": 0,
    "gasUsed": "780582",
    "logsBloom": "0x
    "blockHash": "0xfff130d510c184f977382218044b2ec3ae798b1da9168ddbe730866f7c336790",
    "transactionHash": "0xf99457624e7eb748f4592d91b0bbdb14d61b0fcda2f17cc62841c342f8f421d3",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 6637435,
        "transactionHash": "0xf99457624e7eb748f4592d91b0bbdb14d61b0fcda2f17cc62841c342f8f421d3",
        "address": "0x9C043C139486891D7a67e76E4c31Ac56bBfAF885",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000009a8f92a830a5cb89a3816e3d267cb7791c16b04d"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xfff130d510c184f977382218044b2ec3ae798b1da9168ddbe730866f7c336790"
      }
    ],
    "blockNumber": 6637435,
    "cumulativeGasUsed": "780582",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "5447891ea04e482f68bb353bcee1cde1",
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"rateModel\",\"type\":\"string\"}],\"name\":\"UpdatedRateModel\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"l1TokenRateModels\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"rateModel\",\"type\":\"string\"}],\"name\":\"updateRateModel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract is designed to be queried by off-chain relayers that need to compute realized LP fee %'s before submitting relay transactions to a BridgePool contract. Therefore, this contract does not perform any validation on the shape of the rate model, which is stored as a string to enable arbitrary data encoding via a stringified JSON object. This leaves this contract unopionated on the parameters within the rate model, enabling governance to adjust the structure in the future.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateRateModel(address,string)\":{\"params\":{\"l1Token\":\"the l1 token rate model to update.\",\"rateModel\":\"the updated rate model.\"}}},\"title\":\"Maps rate model objects to L1 token.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"updateRateModel(address,string)\":{\"notice\":\"Updates rate model string for L1 token.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RateModelStore.sol\":\"RateModelStore\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@uma/core/contracts/common/implementation/MultiCaller.sol\":{\"content\":\"// This contract is taken from Uniswaps's multi call implementation (https://github.com/Uniswap/uniswap-v3-periphery/blob/main/contracts/base/Multicall.sol)\\n// and was modified to be solidity 0.8 compatible. Additionally, the method was restricted to only work with msg.value\\n// set to 0 to avoid any nasty attack vectors on function calls that use value sent with deposits.\\npragma solidity ^0.8.0;\\n\\n/// @title MultiCaller\\n/// @notice Enables calling multiple methods in a single call to the contract\\ncontract MultiCaller {\\n    function multicall(bytes[] calldata data) external payable returns (bytes[] memory results) {\\n        require(msg.value == 0, \\\"Only multicall with 0 value\\\");\\n        results = new bytes[](data.length);\\n        for (uint256 i = 0; i < data.length; i++) {\\n            (bool success, bytes memory result) = address(this).delegatecall(data[i]);\\n\\n            if (!success) {\\n                // Next 5 lines from https://ethereum.stackexchange.com/a/83577\\n                if (result.length < 68) revert();\\n                assembly {\\n                    result := add(result, 0x04)\\n                }\\n                revert(abi.decode(result, (string)));\\n            }\\n\\n            results[i] = result;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x31f18055b14fd9eeb459c6d6a88d1a60921bf3755031f6db4b709c3e01d078f7\"},\"contracts/RateModelStore.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0-only\\npragma solidity ^0.8.0;\\n\\nimport \\\"@uma/core/contracts/common/implementation/MultiCaller.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\n/**\\n * @title Maps rate model objects to L1 token.\\n * @dev This contract is designed to be queried by off-chain relayers that need to compute realized LP fee %'s before\\n * submitting relay transactions to a BridgePool contract. Therefore, this contract does not perform any validation on\\n * the shape of the rate model, which is stored as a string to enable arbitrary data encoding via a stringified JSON\\n * object. This leaves this contract unopionated on the parameters within the rate model, enabling governance to adjust\\n * the structure in the future.\\n */\\ncontract RateModelStore is Ownable, MultiCaller {\\n    mapping(address => string) public l1TokenRateModels;\\n\\n    event UpdatedRateModel(address indexed l1Token, string rateModel);\\n\\n    /**\\n     * @notice Updates rate model string for L1 token.\\n     * @param l1Token the l1 token rate model to update.\\n     * @param rateModel the updated rate model.\\n     */\\n    function updateRateModel(address l1Token, string memory rateModel) external onlyOwner {\\n        l1TokenRateModels[l1Token] = rateModel;\\n        emit UpdatedRateModel(l1Token, rateModel);\\n    }\\n}\\n\",\"keccak256\":\"0xa476c6f657c69316a86ceddbbffb29e77d6550598a3946db43970b9493aa0b16\",\"license\":\"AGPL-3.0-only\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610cc68061007e6000396000f3fe6080604052600436106100655760003560e01c80638da5cb5b116100435780638da5cb5b146100d7578063ac9650d81461010c578063f2fde38b1461012c57600080fd5b80630be5512b1461006a578063715018a61461008c57806374cc3f3e146100a1575b600080fd5b34801561007657600080fd5b5061008a610085366004610887565b61014c565b005b34801561009857600080fd5b5061008a61025b565b3480156100ad57600080fd5b506100c16100bc366004610918565b6102e8565b6040516100ce91906109b4565b60405180910390f35b3480156100e357600080fd5b5060005460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100ce565b61011f61011a3660046109c7565b610382565b6040516100ce9190610a3c565b34801561013857600080fd5b5061008a610147366004610918565b61055c565b60005473ffffffffffffffffffffffffffffffffffffffff1633146101d2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166000908152600160209081526040909120825161020892840190610701565b508173ffffffffffffffffffffffffffffffffffffffff167fffbed0e73ca0e16b79488dd92e2cea865dd04b08d41dd27f05abbad9584581388260405161024f91906109b4565b60405180910390a25050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146102dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101c9565b6102e6600061068c565b565b6001602052600090815260409020805461030190610abc565b80601f016020809104026020016040519081016040528092919081815260200182805461032d90610abc565b801561037a5780601f1061034f5761010080835404028352916020019161037a565b820191906000526020600020905b81548152906001019060200180831161035d57829003601f168201915b505050505081565b606034156103ec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4f6e6c79206d756c746963616c6c207769746820302076616c7565000000000060448201526064016101c9565b8167ffffffffffffffff811115610405576104056107c3565b60405190808252806020026020018201604052801561043857816020015b60608152602001906001900390816104235790505b50905060005b82811015610555576000803086868581811061045c5761045c610b0f565b905060200281019061046e9190610b3e565b60405161047c929190610baa565b600060405180830381855af49150503d80600081146104b7576040519150601f19603f3d011682016040523d82523d6000602084013e6104bc565b606091505b509150915081610522576044815110156104d557600080fd5b600481019050808060200190518101906104ef9190610bba565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c991906109b4565b8084848151811061053557610535610b0f565b60200260200101819052505050808061054d90610c31565b91505061043e565b5092915050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146105dd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101c9565b73ffffffffffffffffffffffffffffffffffffffff8116610680576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016101c9565b6106898161068c565b50565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805461070d90610abc565b90600052602060002090601f01602090048101928261072f5760008555610775565b82601f1061074857805160ff1916838001178555610775565b82800160010185558215610775579182015b8281111561077557825182559160200191906001019061075a565b50610781929150610785565b5090565b5b808211156107815760008155600101610786565b803573ffffffffffffffffffffffffffffffffffffffff811681146107be57600080fd5b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610839576108396107c3565b604052919050565b600067ffffffffffffffff82111561085b5761085b6107c3565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b6000806040838503121561089a57600080fd5b6108a38361079a565b9150602083013567ffffffffffffffff8111156108bf57600080fd5b8301601f810185136108d057600080fd5b80356108e36108de82610841565b6107f2565b8181528660208385010111156108f857600080fd5b816020840160208301376000602083830101528093505050509250929050565b60006020828403121561092a57600080fd5b6109338261079a565b9392505050565b60005b8381101561095557818101518382015260200161093d565b83811115610964576000848401525b50505050565b6000815180845261098281602086016020860161093a565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000610933602083018461096a565b600080602083850312156109da57600080fd5b823567ffffffffffffffff808211156109f257600080fd5b818501915085601f830112610a0657600080fd5b813581811115610a1557600080fd5b8660208260051b8501011115610a2a57600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610aaf577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452610a9d85835161096a565b94509285019290850190600101610a63565b5092979650505050505050565b600181811c90821680610ad057607f821691505b602082108103610b09577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112610b7357600080fd5b83018035915067ffffffffffffffff821115610b8e57600080fd5b602001915036819003821315610ba357600080fd5b9250929050565b8183823760009101908152919050565b600060208284031215610bcc57600080fd5b815167ffffffffffffffff811115610be357600080fd5b8201601f81018413610bf457600080fd5b8051610c026108de82610841565b818152856020838501011115610c1757600080fd5b610c2882602083016020860161093a565b95945050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610c89577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea26469706673582212208e5db8f43ebedc8eed583769234122bc8473aea877b1a57cffaf607e81f67c7b64736f6c634300080d0033",
  "deployedBytecode": "0x6080604052600436106100655760003560e01c80638da5cb5b116100435780638da5cb5b146100d7578063ac9650d81461010c578063f2fde38b1461012c57600080fd5b80630be5512b1461006a578063715018a61461008c57806374cc3f3e146100a1575b600080fd5b34801561007657600080fd5b5061008a610085366004610887565b61014c565b005b34801561009857600080fd5b5061008a61025b565b3480156100ad57600080fd5b506100c16100bc366004610918565b6102e8565b6040516100ce91906109b4565b60405180910390f35b3480156100e357600080fd5b5060005460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100ce565b61011f61011a3660046109c7565b610382565b6040516100ce9190610a3c565b34801561013857600080fd5b5061008a610147366004610918565b61055c565b60005473ffffffffffffffffffffffffffffffffffffffff1633146101d2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166000908152600160209081526040909120825161020892840190610701565b508173ffffffffffffffffffffffffffffffffffffffff167fffbed0e73ca0e16b79488dd92e2cea865dd04b08d41dd27f05abbad9584581388260405161024f91906109b4565b60405180910390a25050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146102dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101c9565b6102e6600061068c565b565b6001602052600090815260409020805461030190610abc565b80601f016020809104026020016040519081016040528092919081815260200182805461032d90610abc565b801561037a5780601f1061034f5761010080835404028352916020019161037a565b820191906000526020600020905b81548152906001019060200180831161035d57829003601f168201915b505050505081565b606034156103ec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4f6e6c79206d756c746963616c6c207769746820302076616c7565000000000060448201526064016101c9565b8167ffffffffffffffff811115610405576104056107c3565b60405190808252806020026020018201604052801561043857816020015b60608152602001906001900390816104235790505b50905060005b82811015610555576000803086868581811061045c5761045c610b0f565b905060200281019061046e9190610b3e565b60405161047c929190610baa565b600060405180830381855af49150503d80600081146104b7576040519150601f19603f3d011682016040523d82523d6000602084013e6104bc565b606091505b509150915081610522576044815110156104d557600080fd5b600481019050808060200190518101906104ef9190610bba565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c991906109b4565b8084848151811061053557610535610b0f565b60200260200101819052505050808061054d90610c31565b91505061043e565b5092915050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146105dd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101c9565b73ffffffffffffffffffffffffffffffffffffffff8116610680576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016101c9565b6106898161068c565b50565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805461070d90610abc565b90600052602060002090601f01602090048101928261072f5760008555610775565b82601f1061074857805160ff1916838001178555610775565b82800160010185558215610775579182015b8281111561077557825182559160200191906001019061075a565b50610781929150610785565b5090565b5b808211156107815760008155600101610786565b803573ffffffffffffffffffffffffffffffffffffffff811681146107be57600080fd5b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610839576108396107c3565b604052919050565b600067ffffffffffffffff82111561085b5761085b6107c3565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b6000806040838503121561089a57600080fd5b6108a38361079a565b9150602083013567ffffffffffffffff8111156108bf57600080fd5b8301601f810185136108d057600080fd5b80356108e36108de82610841565b6107f2565b8181528660208385010111156108f857600080fd5b816020840160208301376000602083830101528093505050509250929050565b60006020828403121561092a57600080fd5b6109338261079a565b9392505050565b60005b8381101561095557818101518382015260200161093d565b83811115610964576000848401525b50505050565b6000815180845261098281602086016020860161093a565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000610933602083018461096a565b600080602083850312156109da57600080fd5b823567ffffffffffffffff808211156109f257600080fd5b818501915085601f830112610a0657600080fd5b813581811115610a1557600080fd5b8660208260051b8501011115610a2a57600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015610aaf577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452610a9d85835161096a565b94509285019290850190600101610a63565b5092979650505050505050565b600181811c90821680610ad057607f821691505b602082108103610b09577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112610b7357600080fd5b83018035915067ffffffffffffffff821115610b8e57600080fd5b602001915036819003821315610ba357600080fd5b9250929050565b8183823760009101908152919050565b600060208284031215610bcc57600080fd5b815167ffffffffffffffff811115610be357600080fd5b8201601f81018413610bf457600080fd5b8051610c026108de82610841565b818152856020838501011115610c1757600080fd5b610c2882602083016020860161093a565b95945050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610c89577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea26469706673582212208e5db8f43ebedc8eed583769234122bc8473aea877b1a57cffaf607e81f67c7b64736f6c634300080d0033",
  "devdoc": {
    "details": "This contract is designed to be queried by off-chain relayers that need to compute realized LP fee %'s before submitting relay transactions to a BridgePool contract. Therefore, this contract does not perform any validation on the shape of the rate model, which is stored as a string to enable arbitrary data encoding via a stringified JSON object. This leaves this contract unopionated on the parameters within the rate model, enabling governance to adjust the structure in the future.",
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updateRateModel(address,string)": {
        "params": {
          "l1Token": "the l1 token rate model to update.",
          "rateModel": "the updated rate model."
        }
      }
    },
    "title": "Maps rate model objects to L1 token.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "updateRateModel(address,string)": {
        "notice": "Updates rate model string for L1 token."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 400,
        "contract": "contracts/RateModelStore.sol:RateModelStore",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 8291,
        "contract": "contracts/RateModelStore.sol:RateModelStore",
        "label": "l1TokenRateModels",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_string_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      }
    }
  }
}
